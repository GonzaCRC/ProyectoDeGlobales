{"version":3,"sources":["../src/index.js"],"names":["require","config","startServer","app","server","ApolloServer","typeDefs","resolvers","applyMiddleware","mongoose","connect","process","env","DB_USER","DB_PASSWORD","useNewUrlParser","useUnifiedTopology","listen","port","PORT","console","log"],"mappings":";;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AANAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAQA,IAAMC,WAAW;AAAA,+BAAG,aAAY;AAC9B,QAAMC,GAAG,GAAG,uBAAZ;AAEA,QAAMC,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAC9BC,MAAAA,QAAQ,EAARA,kBAD8B;AAE9BC,MAAAA,SAAS,EAATA;AAF8B,KAAjB,CAAf;AAKAH,IAAAA,MAAM,CAACI,eAAP,CAAuB;AAAEL,MAAAA;AAAF,KAAvB;AAEA,UAAMM,kBAASC,OAAT,yBACaC,OAAO,CAACC,GAAR,CAAYC,OADzB,cACoCF,OAAO,CAACC,GAAR,CAAYE,WADhD,2EAEJ;AACEC,MAAAA,eAAe,EAAE,IADnB;AAEEC,MAAAA,kBAAkB,EAAE;AAFtB,KAFI,CAAN;AAQAb,IAAAA,GAAG,CAACc,MAAJ,CAAW;AAAEC,MAAAA,IAAI,EAAEP,OAAO,CAACC,GAAR,CAAYO,IAAZ,IAAoB;AAA5B,KAAX,EAA+C,MAC7CC,OAAO,CAACC,GAAR,8BADF;AAGD,GArBgB;;AAAA,kBAAXnB,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAuBAA,WAAW","sourcesContent":["require(\"dotenv\").config();\r\n\r\nimport { ApolloServer } from \"apollo-server-express\";\r\nimport express from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport { typeDefs } from \"./typeDefs\";\r\nimport { resolvers } from \"./resolvers\";\r\n\r\nconst startServer = async () => {\r\n  const app = express();\r\n\r\n  const server = new ApolloServer({\r\n    typeDefs,\r\n    resolvers,\r\n  });\r\n\r\n  server.applyMiddleware({ app });\r\n\r\n  await mongoose.connect(\r\n    `mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASSWORD}@proyectodeglobales-rmjad.mongodb.net/db?retryWrites=true&w=majority`,\r\n    {\r\n      useNewUrlParser: true,\r\n      useUnifiedTopology: true,\r\n    }\r\n  );\r\n\r\n  app.listen({ port: process.env.PORT || 3000 }, () =>\r\n    console.log(`ğŸš€ Server ready!`)\r\n  );\r\n};\r\n\r\nstartServer();\r\n"],"file":"index.js"}